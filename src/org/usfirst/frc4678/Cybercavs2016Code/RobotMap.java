// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4678.Cybercavs2016Code;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.AnalogPotentiometer;
import edu.wpi.first.wpilibj.CANTalon;
import edu.wpi.first.wpilibj.Servo;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.Talon;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController robotDriveleftMotor;
    public static SpeedController robotDriverightMotor;
    public static CANTalon armMotorspickupElbowMotor;
    public static CANTalon armMotorspickupWristMotor;
    public static SpeedController armMotorspickupWheels;
    public static SpeedController catapultwinchMotor;
    public static Servo catapultlatchServo;
    public static AnalogPotentiometer catapultwinchPosition;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        robotDriveleftMotor = new Talon(0);
        LiveWindow.addActuator("RobotDrive", "leftMotor", (Talon) robotDriveleftMotor);
        
        robotDriverightMotor = new Talon(1);
        LiveWindow.addActuator("RobotDrive", "rightMotor", (Talon) robotDriverightMotor);
        
        armMotorspickupElbowMotor = new CANTalon(0);
        LiveWindow.addActuator("ArmMotors", "pickupElbowMotor", armMotorspickupElbowMotor);
        
        armMotorspickupWristMotor = new CANTalon(1);
        LiveWindow.addActuator("ArmMotors", "pickupWristMotor", armMotorspickupWristMotor);
        
        armMotorspickupWheels = new Talon(2);
        LiveWindow.addActuator("ArmMotors", "pickupWheels", (Talon) armMotorspickupWheels);
        
        catapultwinchMotor = new Talon(4);
        LiveWindow.addActuator("Catapult", "winchMotor", (Talon) catapultwinchMotor);
        
        catapultlatchServo = new Servo(3);
        LiveWindow.addActuator("Catapult", "latchServo", catapultlatchServo);
        
        catapultwinchPosition = new AnalogPotentiometer(0, 10.0, 0.0);
        LiveWindow.addSensor("Catapult", "winchPosition", catapultwinchPosition);
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
